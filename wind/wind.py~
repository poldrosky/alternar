#!/usr/bin/env python3
import os
import Pdbc
import time

db = Pdbc.DBConnector('wind', 'johnkvp', '123', '190.254.4.128', '5432')

inf = float("inf")

direction = {'01':[337.5,22.5], '02':[22.5, 67.5], '03':[67.5,112.5], '04':[112.5,157.5],
             '05':[157.5,202.5], '06':[202.5, 247.5], '07':[247.5, 292.5], '08':[292.5, 337.5]}

speed = {'01':[0,0.3], '02':[0.3,1.6], '03':[1.6,3.4], '04':[3.4,5.5],
         '05':[5.5,8.0], '06':[8,10.8], '07':[10.8,13.9], '08':[13.9,17.2],
         '09':[17.2,20.8], '10':[20.8,24.4], '11':[24.4,28.5], '12': [28.5,32.7], '13':[32.7,inf]}
         
direction1 = {'01':'N', '02':'NE', '03':'E', '04':'SE',
              '05':'S', '06':'SW', '07':'W', '08':'NW'}
              

def conversion(s):
    directionWind = s[:2]
    speedWind = s[2:]
    return str(direction1[directionWind])+str(speed[speedWind])
              

def classifySpeed(value, dictClass):
    """Ingresa un valor y una dicionario y retorna el numero del grupo"""
    for i in dictClass:
        if value > dictClass[i][0] and value <= dictClass[i][1]:
            return i

def classifyDirection(value, dictClass):
    """Ingresa un valor y una dicionario y retorna el numero del grupo"""
    for i in dictClass:
        if value > dictClass[i][0] and value <= dictClass[i][1]:
            return i
    return '01'


query = 'SELECT DISTINCT latitude, longitude FROM timeseries50 ORDER BY latitude, longitude LIMIT 1'
stations = db.resultQuery(query)

for station in stations:
    query1 = 'SELECT * FROM timeseries50 WHERE latitude='+str(station[0])+' AND longitude='+str(station[1])+' ORDER BY timewind'
    rows = db.resultQuery(query1)
    dataList = []
    timeWindBack = rows[0][3]
    dataList.append([])
    count = 0
    for row in rows:
        timeWindCurrent = row[3]
        if(timeWindCurrent != timeWindBack):
            dataList[count].append('\n')
            dataList.append([])
            count += 1
            timeWindBack = timeWindCurrent
        directionWind = classifyDirection(row[6],direction)
        speedWind = classifySpeed(row[7],speed)
        value = directionWind+speedWind
        dataList[count].append(value)
    
    output = open('output.dat','w')
    st = ''
    for i in dataList:
        st += ' '.join(i)
        
    output.write(st)
    output.close()
    
    if os.path.getsize('output.dat') == 0:
        continue
    
    os.system('./lcm_seq Ffm -l '+str(4)+ ' output.dat ' + str(1000) + ' output.mfi > /dev/null')
    
    if os.path.exists('output.mfi'):
        output1 = open('output.mfi','r')				
            
print('done')

